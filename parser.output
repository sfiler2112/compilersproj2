Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type ';'
    3                | error ';'

    4 optional_variable: variable_
    5                  | %empty

    6 variable_: variable
    7          | variable_ variable

    8 variable: IDENTIFIER ':' type IS statement_
    9         | error ';'

   10 optional_parameters: parameter_
   11                    | %empty

   12 parameter_: parameter
   13           | parameter_ ',' parameter

   14 parameter: IDENTIFIER ':' type

   15 type: INTEGER
   16     | REAL
   17     | BOOLEAN

   18 body: BEGIN_ statement_ END ';'
   19     | BEGIN_ error END ';'

   20 statement_: statement ';'
   21           | error ';'

   22 statement: expression
   23          | reduce_statement
   24          | if_statement
   25          | case_statement

   26 case_statement: CASE expression IS optional_case OTHERS ARROW statement_ ENDCASE
   27               | CASE error ENDCASE

   28 if_statement: IF expression THEN statement_ ELSE statement_ ENDIF
   29             | IF error ENDIF

   30 reduce_statement: REDUCE operator optional_reductions ENDREDUCE
   31                 | REDUCE error ENDREDUCE

   32 optional_case: case_
   33              | %empty

   34 case_: case
   35      | case_ case

   36 case: WHEN INT_LITERAL ARROW statement_

   37 operator: ADDOP
   38         | MULOP

   39 optional_reductions: reductions
   40                    | %empty

   41 reductions: statement_
   42           | reductions statement_

   43 expression: expression OROP and_expression
   44           | and_expression

   45 and_expression: and_expression ANDOP relation
   46               | relation

   47 relation: relation RELOP term
   48         | term

   49 term: term ADDOP factor
   50     | factor

   51 factor: factor MULOP exponent
   52       | factor REMOP exponent
   53       | exponent

   54 exponent: primary EXPOP exponent
   55         | primary

   56 primary: '(' expression ')'
   57        | NOTOP primary
   58        | INT_LITERAL
   59        | REAL_LITERAL
   60        | BOOL_LITERAL
   61        | IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'(' (40) 56
')' (41) 56
',' (44) 13
':' (58) 8 14
';' (59) 2 3 9 18 19 20 21
error (256) 3 9 19 21 27 29 31
IDENTIFIER (258) 2 8 14 61
INT_LITERAL (259) 36 58
REAL_LITERAL (260) 59
BOOL_LITERAL (261) 60
ADDOP (262) 37 49
MULOP (263) 38 51
RELOP (264) 47
ANDOP (265) 45
REMOP (266) 52
EXPOP (267) 54
OROP (268) 43
NOTOP (269) 57
ARROW (270) 26 36
BEGIN_ (271) 18 19
BOOLEAN (272) 17
END (273) 18 19
ENDREDUCE (274) 30 31
FUNCTION (275) 2
INTEGER (276) 15
IS (277) 8 26
REDUCE (278) 30 31
CASE (279) 26 27
ELSE (280) 28
ENDCASE (281) 26 27
ENDIF (282) 28 29
IF (283) 28 29
OTHERS (284) 26
REAL (285) 16
THEN (286) 28
WHEN (287) 36
RETURNS (288) 2


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
function (40)
    on left: 1, on right: 0
function_header (41)
    on left: 2 3, on right: 1
optional_variable (42)
    on left: 4 5, on right: 1
variable_ (43)
    on left: 6 7, on right: 4 7
variable (44)
    on left: 8 9, on right: 6 7
optional_parameters (45)
    on left: 10 11, on right: 2
parameter_ (46)
    on left: 12 13, on right: 10 13
parameter (47)
    on left: 14, on right: 12 13
type (48)
    on left: 15 16 17, on right: 2 8 14
body (49)
    on left: 18 19, on right: 1
statement_ (50)
    on left: 20 21, on right: 8 18 26 28 36 41 42
statement (51)
    on left: 22 23 24 25, on right: 20
case_statement (52)
    on left: 26 27, on right: 25
if_statement (53)
    on left: 28 29, on right: 24
reduce_statement (54)
    on left: 30 31, on right: 23
optional_case (55)
    on left: 32 33, on right: 26
case_ (56)
    on left: 34 35, on right: 32 35
case (57)
    on left: 36, on right: 34 35
operator (58)
    on left: 37 38, on right: 30
optional_reductions (59)
    on left: 39 40, on right: 30
reductions (60)
    on left: 41 42, on right: 39 42
expression (61)
    on left: 43 44, on right: 22 26 28 43 56
and_expression (62)
    on left: 45 46, on right: 43 44 45
relation (63)
    on left: 47 48, on right: 45 46 47
term (64)
    on left: 49 50, on right: 47 48 49
factor (65)
    on left: 51 52 53, on right: 49 50 51 52
exponent (66)
    on left: 54 55, on right: 51 52 53 54
primary (67)
    on left: 56 57 58 59 60 61, on right: 54 55 57


State 0

    0 $accept: . function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    3 function_header: error . ';'

    ';'  shift, and go to state 5


State 2

    2 function_header: FUNCTION . IDENTIFIER optional_parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: function . $end

    $end  shift, and go to state 7


State 4

    1 function: function_header . optional_variable body

    error       shift, and go to state 8
    IDENTIFIER  shift, and go to state 9

    BEGIN_  reduce using rule 5 (optional_variable)

    optional_variable  go to state 10
    variable_          go to state 11
    variable           go to state 12


State 5

    3 function_header: error ';' .

    $default  reduce using rule 3 (function_header)


State 6

    2 function_header: FUNCTION IDENTIFIER . optional_parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 11 (optional_parameters)

    optional_parameters  go to state 14
    parameter_           go to state 15
    parameter            go to state 16


State 7

    0 $accept: function $end .

    $default  accept


State 8

    9 variable: error . ';'

    ';'  shift, and go to state 17


State 9

    8 variable: IDENTIFIER . ':' type IS statement_

    ':'  shift, and go to state 18


State 10

    1 function: function_header optional_variable . body

    BEGIN_  shift, and go to state 19

    body  go to state 20


State 11

    4 optional_variable: variable_ .
    7 variable_: variable_ . variable

    error       shift, and go to state 8
    IDENTIFIER  shift, and go to state 9

    BEGIN_  reduce using rule 4 (optional_variable)

    variable  go to state 21


State 12

    6 variable_: variable .

    $default  reduce using rule 6 (variable_)


State 13

   14 parameter: IDENTIFIER . ':' type

    ':'  shift, and go to state 22


State 14

    2 function_header: FUNCTION IDENTIFIER optional_parameters . RETURNS type ';'

    RETURNS  shift, and go to state 23


State 15

   10 optional_parameters: parameter_ .
   13 parameter_: parameter_ . ',' parameter

    ','  shift, and go to state 24

    $default  reduce using rule 10 (optional_parameters)


State 16

   12 parameter_: parameter .

    $default  reduce using rule 12 (parameter_)


State 17

    9 variable: error ';' .

    $default  reduce using rule 9 (variable)


State 18

    8 variable: IDENTIFIER ':' . type IS statement_

    BOOLEAN  shift, and go to state 25
    INTEGER  shift, and go to state 26
    REAL     shift, and go to state 27

    type  go to state 28


State 19

   18 body: BEGIN_ . statement_ END ';'
   19     | BEGIN_ . error END ';'

    error         shift, and go to state 29
    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    NOTOP         shift, and go to state 34
    REDUCE        shift, and go to state 35
    CASE          shift, and go to state 36
    IF            shift, and go to state 37
    '('           shift, and go to state 38

    statement_        go to state 39
    statement         go to state 40
    case_statement    go to state 41
    if_statement      go to state 42
    reduce_statement  go to state 43
    expression        go to state 44
    and_expression    go to state 45
    relation          go to state 46
    term              go to state 47
    factor            go to state 48
    exponent          go to state 49
    primary           go to state 50


State 20

    1 function: function_header optional_variable body .

    $default  reduce using rule 1 (function)


State 21

    7 variable_: variable_ variable .

    $default  reduce using rule 7 (variable_)


State 22

   14 parameter: IDENTIFIER ':' . type

    BOOLEAN  shift, and go to state 25
    INTEGER  shift, and go to state 26
    REAL     shift, and go to state 27

    type  go to state 51


State 23

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS . type ';'

    BOOLEAN  shift, and go to state 25
    INTEGER  shift, and go to state 26
    REAL     shift, and go to state 27

    type  go to state 52


State 24

   13 parameter_: parameter_ ',' . parameter

    IDENTIFIER  shift, and go to state 13

    parameter  go to state 53


State 25

   17 type: BOOLEAN .

    $default  reduce using rule 17 (type)


State 26

   15 type: INTEGER .

    $default  reduce using rule 15 (type)


State 27

   16 type: REAL .

    $default  reduce using rule 16 (type)


State 28

    8 variable: IDENTIFIER ':' type . IS statement_

    IS  shift, and go to state 54


State 29

   19 body: BEGIN_ error . END ';'
   21 statement_: error . ';'

    END  shift, and go to state 55
    ';'  shift, and go to state 56


State 30

   61 primary: IDENTIFIER .

    $default  reduce using rule 61 (primary)


State 31

   58 primary: INT_LITERAL .

    $default  reduce using rule 58 (primary)


State 32

   59 primary: REAL_LITERAL .

    $default  reduce using rule 59 (primary)


State 33

   60 primary: BOOL_LITERAL .

    $default  reduce using rule 60 (primary)


State 34

   57 primary: NOTOP . primary

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    NOTOP         shift, and go to state 34
    '('           shift, and go to state 38

    primary  go to state 57


State 35

   30 reduce_statement: REDUCE . operator optional_reductions ENDREDUCE
   31                 | REDUCE . error ENDREDUCE

    error  shift, and go to state 58
    ADDOP  shift, and go to state 59
    MULOP  shift, and go to state 60

    operator  go to state 61


State 36

   26 case_statement: CASE . expression IS optional_case OTHERS ARROW statement_ ENDCASE
   27               | CASE . error ENDCASE

    error         shift, and go to state 62
    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    NOTOP         shift, and go to state 34
    '('           shift, and go to state 38

    expression      go to state 63
    and_expression  go to state 45
    relation        go to state 46
    term            go to state 47
    factor          go to state 48
    exponent        go to state 49
    primary         go to state 50


State 37

   28 if_statement: IF . expression THEN statement_ ELSE statement_ ENDIF
   29             | IF . error ENDIF

    error         shift, and go to state 64
    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    NOTOP         shift, and go to state 34
    '('           shift, and go to state 38

    expression      go to state 65
    and_expression  go to state 45
    relation        go to state 46
    term            go to state 47
    factor          go to state 48
    exponent        go to state 49
    primary         go to state 50


State 38

   56 primary: '(' . expression ')'

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    NOTOP         shift, and go to state 34
    '('           shift, and go to state 38

    expression      go to state 66
    and_expression  go to state 45
    relation        go to state 46
    term            go to state 47
    factor          go to state 48
    exponent        go to state 49
    primary         go to state 50


State 39

   18 body: BEGIN_ statement_ . END ';'

    END  shift, and go to state 67


State 40

   20 statement_: statement . ';'

    ';'  shift, and go to state 68


State 41

   25 statement: case_statement .

    $default  reduce using rule 25 (statement)


State 42

   24 statement: if_statement .

    $default  reduce using rule 24 (statement)


State 43

   23 statement: reduce_statement .

    $default  reduce using rule 23 (statement)


State 44

   22 statement: expression .
   43 expression: expression . OROP and_expression

    OROP  shift, and go to state 69

    $default  reduce using rule 22 (statement)


State 45

   44 expression: and_expression .
   45 and_expression: and_expression . ANDOP relation

    ANDOP  shift, and go to state 70

    $default  reduce using rule 44 (expression)


State 46

   46 and_expression: relation .
   47 relation: relation . RELOP term

    RELOP  shift, and go to state 71

    $default  reduce using rule 46 (and_expression)


State 47

   48 relation: term .
   49 term: term . ADDOP factor

    ADDOP  shift, and go to state 72

    $default  reduce using rule 48 (relation)


State 48

   50 term: factor .
   51 factor: factor . MULOP exponent
   52       | factor . REMOP exponent

    MULOP  shift, and go to state 73
    REMOP  shift, and go to state 74

    $default  reduce using rule 50 (term)


State 49

   53 factor: exponent .

    $default  reduce using rule 53 (factor)


State 50

   54 exponent: primary . EXPOP exponent
   55         | primary .

    EXPOP  shift, and go to state 75

    $default  reduce using rule 55 (exponent)


State 51

   14 parameter: IDENTIFIER ':' type .

    $default  reduce using rule 14 (parameter)


State 52

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type . ';'

    ';'  shift, and go to state 76


State 53

   13 parameter_: parameter_ ',' parameter .

    $default  reduce using rule 13 (parameter_)


State 54

    8 variable: IDENTIFIER ':' type IS . statement_

    error         shift, and go to state 77
    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    NOTOP         shift, and go to state 34
    REDUCE        shift, and go to state 35
    CASE          shift, and go to state 36
    IF            shift, and go to state 37
    '('           shift, and go to state 38

    statement_        go to state 78
    statement         go to state 40
    case_statement    go to state 41
    if_statement      go to state 42
    reduce_statement  go to state 43
    expression        go to state 44
    and_expression    go to state 45
    relation          go to state 46
    term              go to state 47
    factor            go to state 48
    exponent          go to state 49
    primary           go to state 50


State 55

   19 body: BEGIN_ error END . ';'

    ';'  shift, and go to state 79


State 56

   21 statement_: error ';' .

    $default  reduce using rule 21 (statement_)


State 57

   57 primary: NOTOP primary .

    $default  reduce using rule 57 (primary)


State 58

   31 reduce_statement: REDUCE error . ENDREDUCE

    ENDREDUCE  shift, and go to state 80


State 59

   37 operator: ADDOP .

    $default  reduce using rule 37 (operator)


State 60

   38 operator: MULOP .

    $default  reduce using rule 38 (operator)


State 61

   30 reduce_statement: REDUCE operator . optional_reductions ENDREDUCE

    error         shift, and go to state 77
    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    NOTOP         shift, and go to state 34
    REDUCE        shift, and go to state 35
    CASE          shift, and go to state 36
    IF            shift, and go to state 37
    '('           shift, and go to state 38

    ENDREDUCE  reduce using rule 40 (optional_reductions)

    statement_           go to state 81
    statement            go to state 40
    case_statement       go to state 41
    if_statement         go to state 42
    reduce_statement     go to state 43
    optional_reductions  go to state 82
    reductions           go to state 83
    expression           go to state 44
    and_expression       go to state 45
    relation             go to state 46
    term                 go to state 47
    factor               go to state 48
    exponent             go to state 49
    primary              go to state 50


State 62

   27 case_statement: CASE error . ENDCASE

    ENDCASE  shift, and go to state 84


State 63

   26 case_statement: CASE expression . IS optional_case OTHERS ARROW statement_ ENDCASE
   43 expression: expression . OROP and_expression

    OROP  shift, and go to state 69
    IS    shift, and go to state 85


State 64

   29 if_statement: IF error . ENDIF

    ENDIF  shift, and go to state 86


State 65

   28 if_statement: IF expression . THEN statement_ ELSE statement_ ENDIF
   43 expression: expression . OROP and_expression

    OROP  shift, and go to state 69
    THEN  shift, and go to state 87


State 66

   43 expression: expression . OROP and_expression
   56 primary: '(' expression . ')'

    OROP  shift, and go to state 69
    ')'   shift, and go to state 88


State 67

   18 body: BEGIN_ statement_ END . ';'

    ';'  shift, and go to state 89


State 68

   20 statement_: statement ';' .

    $default  reduce using rule 20 (statement_)


State 69

   43 expression: expression OROP . and_expression

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    NOTOP         shift, and go to state 34
    '('           shift, and go to state 38

    and_expression  go to state 90
    relation        go to state 46
    term            go to state 47
    factor          go to state 48
    exponent        go to state 49
    primary         go to state 50


State 70

   45 and_expression: and_expression ANDOP . relation

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    NOTOP         shift, and go to state 34
    '('           shift, and go to state 38

    relation  go to state 91
    term      go to state 47
    factor    go to state 48
    exponent  go to state 49
    primary   go to state 50


State 71

   47 relation: relation RELOP . term

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    NOTOP         shift, and go to state 34
    '('           shift, and go to state 38

    term      go to state 92
    factor    go to state 48
    exponent  go to state 49
    primary   go to state 50


State 72

   49 term: term ADDOP . factor

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    NOTOP         shift, and go to state 34
    '('           shift, and go to state 38

    factor    go to state 93
    exponent  go to state 49
    primary   go to state 50


State 73

   51 factor: factor MULOP . exponent

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    NOTOP         shift, and go to state 34
    '('           shift, and go to state 38

    exponent  go to state 94
    primary   go to state 50


State 74

   52 factor: factor REMOP . exponent

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    NOTOP         shift, and go to state 34
    '('           shift, and go to state 38

    exponent  go to state 95
    primary   go to state 50


State 75

   54 exponent: primary EXPOP . exponent

    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    NOTOP         shift, and go to state 34
    '('           shift, and go to state 38

    exponent  go to state 96
    primary   go to state 50


State 76

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type ';' .

    $default  reduce using rule 2 (function_header)


State 77

   21 statement_: error . ';'

    ';'  shift, and go to state 56


State 78

    8 variable: IDENTIFIER ':' type IS statement_ .

    $default  reduce using rule 8 (variable)


State 79

   19 body: BEGIN_ error END ';' .

    $default  reduce using rule 19 (body)


State 80

   31 reduce_statement: REDUCE error ENDREDUCE .

    $default  reduce using rule 31 (reduce_statement)


State 81

   41 reductions: statement_ .

    $default  reduce using rule 41 (reductions)


State 82

   30 reduce_statement: REDUCE operator optional_reductions . ENDREDUCE

    ENDREDUCE  shift, and go to state 97


State 83

   39 optional_reductions: reductions .
   42 reductions: reductions . statement_

    error         shift, and go to state 77
    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    NOTOP         shift, and go to state 34
    REDUCE        shift, and go to state 35
    CASE          shift, and go to state 36
    IF            shift, and go to state 37
    '('           shift, and go to state 38

    ENDREDUCE  reduce using rule 39 (optional_reductions)

    statement_        go to state 98
    statement         go to state 40
    case_statement    go to state 41
    if_statement      go to state 42
    reduce_statement  go to state 43
    expression        go to state 44
    and_expression    go to state 45
    relation          go to state 46
    term              go to state 47
    factor            go to state 48
    exponent          go to state 49
    primary           go to state 50


State 84

   27 case_statement: CASE error ENDCASE .

    $default  reduce using rule 27 (case_statement)


State 85

   26 case_statement: CASE expression IS . optional_case OTHERS ARROW statement_ ENDCASE

    WHEN  shift, and go to state 99

    $default  reduce using rule 33 (optional_case)

    optional_case  go to state 100
    case_          go to state 101
    case           go to state 102


State 86

   29 if_statement: IF error ENDIF .

    $default  reduce using rule 29 (if_statement)


State 87

   28 if_statement: IF expression THEN . statement_ ELSE statement_ ENDIF

    error         shift, and go to state 77
    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    NOTOP         shift, and go to state 34
    REDUCE        shift, and go to state 35
    CASE          shift, and go to state 36
    IF            shift, and go to state 37
    '('           shift, and go to state 38

    statement_        go to state 103
    statement         go to state 40
    case_statement    go to state 41
    if_statement      go to state 42
    reduce_statement  go to state 43
    expression        go to state 44
    and_expression    go to state 45
    relation          go to state 46
    term              go to state 47
    factor            go to state 48
    exponent          go to state 49
    primary           go to state 50


State 88

   56 primary: '(' expression ')' .

    $default  reduce using rule 56 (primary)


State 89

   18 body: BEGIN_ statement_ END ';' .

    $default  reduce using rule 18 (body)


State 90

   43 expression: expression OROP and_expression .
   45 and_expression: and_expression . ANDOP relation

    ANDOP  shift, and go to state 70

    $default  reduce using rule 43 (expression)


State 91

   45 and_expression: and_expression ANDOP relation .
   47 relation: relation . RELOP term

    RELOP  shift, and go to state 71

    $default  reduce using rule 45 (and_expression)


State 92

   47 relation: relation RELOP term .
   49 term: term . ADDOP factor

    ADDOP  shift, and go to state 72

    $default  reduce using rule 47 (relation)


State 93

   49 term: term ADDOP factor .
   51 factor: factor . MULOP exponent
   52       | factor . REMOP exponent

    MULOP  shift, and go to state 73
    REMOP  shift, and go to state 74

    $default  reduce using rule 49 (term)


State 94

   51 factor: factor MULOP exponent .

    $default  reduce using rule 51 (factor)


State 95

   52 factor: factor REMOP exponent .

    $default  reduce using rule 52 (factor)


State 96

   54 exponent: primary EXPOP exponent .

    $default  reduce using rule 54 (exponent)


State 97

   30 reduce_statement: REDUCE operator optional_reductions ENDREDUCE .

    $default  reduce using rule 30 (reduce_statement)


State 98

   42 reductions: reductions statement_ .

    $default  reduce using rule 42 (reductions)


State 99

   36 case: WHEN . INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 104


State 100

   26 case_statement: CASE expression IS optional_case . OTHERS ARROW statement_ ENDCASE

    OTHERS  shift, and go to state 105


State 101

   32 optional_case: case_ .
   35 case_: case_ . case

    WHEN  shift, and go to state 99

    $default  reduce using rule 32 (optional_case)

    case  go to state 106


State 102

   34 case_: case .

    $default  reduce using rule 34 (case_)


State 103

   28 if_statement: IF expression THEN statement_ . ELSE statement_ ENDIF

    ELSE  shift, and go to state 107


State 104

   36 case: WHEN INT_LITERAL . ARROW statement_

    ARROW  shift, and go to state 108


State 105

   26 case_statement: CASE expression IS optional_case OTHERS . ARROW statement_ ENDCASE

    ARROW  shift, and go to state 109


State 106

   35 case_: case_ case .

    $default  reduce using rule 35 (case_)


State 107

   28 if_statement: IF expression THEN statement_ ELSE . statement_ ENDIF

    error         shift, and go to state 77
    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    NOTOP         shift, and go to state 34
    REDUCE        shift, and go to state 35
    CASE          shift, and go to state 36
    IF            shift, and go to state 37
    '('           shift, and go to state 38

    statement_        go to state 110
    statement         go to state 40
    case_statement    go to state 41
    if_statement      go to state 42
    reduce_statement  go to state 43
    expression        go to state 44
    and_expression    go to state 45
    relation          go to state 46
    term              go to state 47
    factor            go to state 48
    exponent          go to state 49
    primary           go to state 50


State 108

   36 case: WHEN INT_LITERAL ARROW . statement_

    error         shift, and go to state 77
    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    NOTOP         shift, and go to state 34
    REDUCE        shift, and go to state 35
    CASE          shift, and go to state 36
    IF            shift, and go to state 37
    '('           shift, and go to state 38

    statement_        go to state 111
    statement         go to state 40
    case_statement    go to state 41
    if_statement      go to state 42
    reduce_statement  go to state 43
    expression        go to state 44
    and_expression    go to state 45
    relation          go to state 46
    term              go to state 47
    factor            go to state 48
    exponent          go to state 49
    primary           go to state 50


State 109

   26 case_statement: CASE expression IS optional_case OTHERS ARROW . statement_ ENDCASE

    error         shift, and go to state 77
    IDENTIFIER    shift, and go to state 30
    INT_LITERAL   shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    NOTOP         shift, and go to state 34
    REDUCE        shift, and go to state 35
    CASE          shift, and go to state 36
    IF            shift, and go to state 37
    '('           shift, and go to state 38

    statement_        go to state 112
    statement         go to state 40
    case_statement    go to state 41
    if_statement      go to state 42
    reduce_statement  go to state 43
    expression        go to state 44
    and_expression    go to state 45
    relation          go to state 46
    term              go to state 47
    factor            go to state 48
    exponent          go to state 49
    primary           go to state 50


State 110

   28 if_statement: IF expression THEN statement_ ELSE statement_ . ENDIF

    ENDIF  shift, and go to state 113


State 111

   36 case: WHEN INT_LITERAL ARROW statement_ .

    $default  reduce using rule 36 (case)


State 112

   26 case_statement: CASE expression IS optional_case OTHERS ARROW statement_ . ENDCASE

    ENDCASE  shift, and go to state 114


State 113

   28 if_statement: IF expression THEN statement_ ELSE statement_ ENDIF .

    $default  reduce using rule 28 (if_statement)


State 114

   26 case_statement: CASE expression IS optional_case OTHERS ARROW statement_ ENDCASE .

    $default  reduce using rule 26 (case_statement)
